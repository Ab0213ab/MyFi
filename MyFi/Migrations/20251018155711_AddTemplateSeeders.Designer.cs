// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MyFi.Migrations
{
    [DbContext(typeof(MyFiDbContext))]
    [Migration("20251018155711_AddTemplateSeeders")]
    partial class AddTemplateSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("MyFi.Models.Budget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("MyFi.Models.BudgetTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "General",
                            Description = "A balanced starter budget covering everyday expenses.",
                            Name = "Essential Living"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Student",
                            Description = "A lean, student-friendly budget for managing limited income.",
                            Name = "College Student"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Debt Management",
                            Description = "A focused budget to aggressively reduce debt while maintaining essential living costs.",
                            Name = "High Debt Paydown"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Balanced",
                            Description = "A simple, balanced budget based on the classic 50% needs, 30% wants, 20% savings model.",
                            Name = "50/30/20 Rule"
                        });
                });

            modelBuilder.Entity("MyFi.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("MyFi.Models.CategoryTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BudgetTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BudgetTemplateId = 1,
                            Description = "Mortgage or rent and home-related bills.",
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 2,
                            BudgetTemplateId = 1,
                            Description = "Electricity, water, internet, phone, etc.",
                            Name = "Utilities"
                        },
                        new
                        {
                            Id = 3,
                            BudgetTemplateId = 1,
                            Description = "Vehicle costs, gas, insurance, and maintenance.",
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 4,
                            BudgetTemplateId = 1,
                            Description = "Groceries and dining out.",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 5,
                            BudgetTemplateId = 1,
                            Description = "Debt payments, savings, or investments.",
                            Name = "Savings & Debt"
                        },
                        new
                        {
                            Id = 6,
                            BudgetTemplateId = 2,
                            Description = "Dorm or apartment rent.",
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 7,
                            BudgetTemplateId = 2,
                            Description = "Meal plan or groceries.",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 8,
                            BudgetTemplateId = 2,
                            Description = "Tuition, books, and course materials.",
                            Name = "Education"
                        },
                        new
                        {
                            Id = 9,
                            BudgetTemplateId = 2,
                            Description = "Bus pass, car, or ride-sharing costs.",
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 10,
                            BudgetTemplateId = 2,
                            Description = "Entertainment, hobbies, or outings.",
                            Name = "Leisure"
                        },
                        new
                        {
                            Id = 11,
                            BudgetTemplateId = 3,
                            Description = "Essential housing expenses.",
                            Name = "Housing"
                        },
                        new
                        {
                            Id = 12,
                            BudgetTemplateId = 3,
                            Description = "Essential commuting or vehicle costs.",
                            Name = "Transportation"
                        },
                        new
                        {
                            Id = 13,
                            BudgetTemplateId = 3,
                            Description = "Groceries only; minimal dining out.",
                            Name = "Food"
                        },
                        new
                        {
                            Id = 14,
                            BudgetTemplateId = 3,
                            Description = "Debt payoff and emergency reserves.",
                            Name = "Debt & Savings"
                        },
                        new
                        {
                            Id = 15,
                            BudgetTemplateId = 3,
                            Description = "Basic personal and household needs.",
                            Name = "Miscellaneous"
                        },
                        new
                        {
                            Id = 16,
                            BudgetTemplateId = 4,
                            Description = "Essential bills, housing, and groceries.",
                            Name = "Needs"
                        },
                        new
                        {
                            Id = 17,
                            BudgetTemplateId = 4,
                            Description = "Non-essential but enjoyable spending.",
                            Name = "Wants"
                        },
                        new
                        {
                            Id = 18,
                            BudgetTemplateId = 4,
                            Description = "Savings, debt payments, and investments.",
                            Name = "Savings & Debt"
                        });
                });

            modelBuilder.Entity("MyFi.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BudgetId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("MyFi.Models.ExpenseTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BudgetTemplateId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PercentageOfTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ExpenseTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 1,
                            Description = "Monthly rent or mortgage payment.",
                            Frequency = 3,
                            Name = "Rent or Mortgage",
                            PercentageOfTotal = 0.30m
                        },
                        new
                        {
                            Id = 2,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 2,
                            Description = "Electricity, water, and internet bills.",
                            Frequency = 3,
                            Name = "Utilities",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 3,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 3,
                            Description = "Fuel, maintenance, and insurance.",
                            Frequency = 3,
                            Name = "Transportation",
                            PercentageOfTotal = 0.15m
                        },
                        new
                        {
                            Id = 4,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 4,
                            Description = "Weekly grocery shopping.",
                            Frequency = 1,
                            Name = "Groceries",
                            PercentageOfTotal = 0.15m
                        },
                        new
                        {
                            Id = 5,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 4,
                            Description = "Restaurants or takeout.",
                            Frequency = 1,
                            Name = "Dining Out",
                            PercentageOfTotal = 0.05m
                        },
                        new
                        {
                            Id = 6,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 5,
                            Description = "Credit card or loan payments.",
                            Frequency = 3,
                            Name = "Debt Payments",
                            PercentageOfTotal = 0.15m
                        },
                        new
                        {
                            Id = 7,
                            BudgetTemplateId = 1,
                            CategoryTemplateId = 5,
                            Description = "Set aside funds for emergencies.",
                            Frequency = 3,
                            Name = "Emergency Savings",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 8,
                            BudgetTemplateId = 2,
                            CategoryTemplateId = 6,
                            Description = "Dorm or apartment rent.",
                            Frequency = 3,
                            Name = "Rent",
                            PercentageOfTotal = 0.35m
                        },
                        new
                        {
                            Id = 9,
                            BudgetTemplateId = 2,
                            CategoryTemplateId = 7,
                            Description = "Food, snacks, or shared groceries.",
                            Frequency = 1,
                            Name = "Groceries",
                            PercentageOfTotal = 0.20m
                        },
                        new
                        {
                            Id = 10,
                            BudgetTemplateId = 2,
                            CategoryTemplateId = 8,
                            Description = "Tuition, textbooks, and class materials.",
                            Frequency = 5,
                            Name = "Tuition & Fees",
                            PercentageOfTotal = 0.25m
                        },
                        new
                        {
                            Id = 11,
                            BudgetTemplateId = 2,
                            CategoryTemplateId = 9,
                            Description = "Bus, fuel, or ride-share expenses.",
                            Frequency = 3,
                            Name = "Transportation",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 12,
                            BudgetTemplateId = 2,
                            CategoryTemplateId = 10,
                            Description = "Movies, events, or hobbies.",
                            Frequency = 3,
                            Name = "Entertainment",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 13,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 11,
                            Description = "Keep housing costs minimal where possible.",
                            Frequency = 3,
                            Name = "Rent or Mortgage",
                            PercentageOfTotal = 0.20m
                        },
                        new
                        {
                            Id = 14,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 11,
                            Description = "Electric, water, and internet essentials.",
                            Frequency = 3,
                            Name = "Utilities",
                            PercentageOfTotal = 0.05m
                        },
                        new
                        {
                            Id = 15,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 12,
                            Description = "Car payments, gas, or public transit.",
                            Frequency = 3,
                            Name = "Transportation",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 16,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 13,
                            Description = "Weekly grocery trips only.",
                            Frequency = 1,
                            Name = "Groceries",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 17,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 14,
                            Description = "Credit card, student loan, or auto debt reduction.",
                            Frequency = 3,
                            Name = "Debt Payments",
                            PercentageOfTotal = 0.35m
                        },
                        new
                        {
                            Id = 18,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 14,
                            Description = "Savings buffer for emergencies.",
                            Frequency = 3,
                            Name = "Emergency Fund",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 19,
                            BudgetTemplateId = 3,
                            CategoryTemplateId = 15,
                            Description = "Household or personal essentials only.",
                            Frequency = 3,
                            Name = "Miscellaneous Essentials",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 20,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 16,
                            Description = "Housing under 30% of total income.",
                            Frequency = 3,
                            Name = "Rent or Mortgage",
                            PercentageOfTotal = 0.30m
                        },
                        new
                        {
                            Id = 21,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 16,
                            Description = "Basic living needs (food, electricity, water).",
                            Frequency = 3,
                            Name = "Utilities & Groceries",
                            PercentageOfTotal = 0.20m
                        },
                        new
                        {
                            Id = 22,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 17,
                            Description = "Restaurants, movies, and leisure.",
                            Frequency = 3,
                            Name = "Dining & Entertainment",
                            PercentageOfTotal = 0.20m
                        },
                        new
                        {
                            Id = 23,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 17,
                            Description = "Trips, recreation, and other wants.",
                            Frequency = 3,
                            Name = "Travel & Hobbies",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 24,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 18,
                            Description = "Loan or credit card payments.",
                            Frequency = 3,
                            Name = "Debt Payments",
                            PercentageOfTotal = 0.10m
                        },
                        new
                        {
                            Id = 25,
                            BudgetTemplateId = 4,
                            CategoryTemplateId = 18,
                            Description = "Long-term savings and retirement.",
                            Frequency = 3,
                            Name = "Savings & Investments",
                            PercentageOfTotal = 0.10m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
